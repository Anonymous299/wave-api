openapi: 3.0.3
info:
  title: 'wave-api API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
tags:
  -
    name: Endpoints
    description: ''
paths:
  /api/health:
    get:
      summary: Health
      operationId: health
      description: 'Checks that the API is up and running.'
      parameters: []
      responses:
        200:
          description: 'API is up and running'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: ok
                properties:
                  status:
                    type: string
                    example: ok
      tags:
        - Endpoints
      security: []
  /api/users/nearby:
    get:
      summary: 'Get Nearby Users'
      operationId: getNearbyUsers
      description: "Retrieves users within a specified distance from the given latitude and longitude.\nIf latitude and longitude are not provided, the auth'd user's location will be used.\n\nthese are query params"
      parameters:
        -
          in: query
          name: latitude
          description: "The latitude of the user's location."
          example: 4326.41688
          required: false
          schema:
            type: number
            description: "The latitude of the user's location."
            example: 4326.41688
            nullable: false
        -
          in: query
          name: longitude
          description: "The longitude of the user's location."
          example: 4326.41688
          required: false
          schema:
            type: number
            description: "The longitude of the user's location."
            example: 4326.41688
            nullable: false
        -
          in: query
          name: distance
          description: 'The distance in kilometers to search for users.'
          example: 4326.41688
          required: true
          schema:
            type: number
            description: 'The distance in kilometers to search for users.'
            example: 4326.41688
            nullable: false
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n  \"users\": [\n    {id: \"98cca5ca-ca31-4031-a41b-241dc0876d5f\" name: \"John Doe\" distance: 1234},\n  ]"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                  description: 'This field is required when <code>longitude</code> is present.'
                  example: 4326.41688
                  nullable: false
                longitude:
                  type: number
                  description: 'This field is required when <code>latitude</code> is present.'
                  example: 4326.41688
                  nullable: false
                distance:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 17
                  nullable: false
              required:
                - distance
      security: []
  /api/users/nearby/count:
    get:
      summary: ''
      operationId: getApiUsersNearbyCount
      description: ''
      parameters:
        -
          in: query
          name: distance
          description: 'The distance in kilometers to search for users.'
          example: 4326.41688
          required: true
          schema:
            type: number
            description: 'The distance in kilometers to search for users.'
            example: 4326.41688
            nullable: false
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"count\": 5,\n \"distance\": 50,\n \"origin\": {\n   \"latitude\": 43.4779751,\n   \"longitude\": -80.5197298\n }"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                distance:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 1
                  nullable: false
              required:
                - distance
      security: []
  /api/users/location:
    post:
      summary: 'Change User Location'
      operationId: changeUserLocation
      description: 'Updates the location of the authenticated user.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n  \"message\": \"Location updated successfully.\"\n  \"user_id\": \"08e1608c-eb31-4623-bde6-b63646daecf9\",\n}"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                  description: 'The latitude of the user.'
                  example: 4326.41688
                  nullable: false
                longitude:
                  type: number
                  description: 'The longitude of the user.'
                  example: 4326.41688
                  nullable: false
              required:
                - latitude
                - longitude
      security: []
  /api/swipes:
    post:
      summary: 'Store Swipe'
      operationId: storeSwipe
      description: 'Stores a swipe for the authenticated user.'
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  swipee_id: 08e1608c-eb31-4623-bde6-b63646daecf9
                  swiper_id: 98cca5ca-ca31-4031-a41b-241dc0876d5f
                  direction: right
                properties:
                  id:
                    type: integer
                    example: 1
                  swipee_id:
                    type: string
                    example: 08e1608c-eb31-4623-bde6-b63646daecf9
                  swiper_id:
                    type: string
                    example: 98cca5ca-ca31-4031-a41b-241dc0876d5f
                  direction:
                    type: string
                    example: right
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                swipee_id:
                  type: string
                  description: 'The ID of the user being swiped on.'
                  example: architecto
                  nullable: false
                direction:
                  type: string
                  description: 'The direction of the swipe (left or right).'
                  example: architecto
                  nullable: false
              required:
                - swipee_id
                - direction
      security: []
  /api/auth/register:
    post:
      summary: Register
      operationId: register
      description: 'Registers a new user.'
      parameters: []
      responses:
        201:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: '{ token: "token", user_id: "08e1608c-eb31-4623-bde6-b63646daecf9" }'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user.'
                  example: architecto
                  nullable: false
                email:
                  type: string
                  description: 'The email of the user.'
                  example: gbailey@example.net
                  nullable: false
                password:
                  type: string
                  description: 'The password of the user.'
                  example: '|]|{+-'
                  nullable: false
                device_name:
                  type: string
                  description: 'The name of the device.'
                  example: architecto
                  nullable: false
                latitude:
                  type: number
                  description: 'The latitude of the user.'
                  example: 4326.41688
                  nullable: false
                longitude:
                  type: number
                  description: 'The longitude of the user.'
                  example: 4326.41688
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The password confirmation of the user.'
                  example: architecto
                  nullable: false
              required:
                - name
                - email
                - password
                - device_name
                - latitude
                - longitude
                - password_confirmation
      security: []
  /api/auth/login:
    post:
      summary: Login
      operationId: login
      description: 'Logs in a user.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: '{ token: "token", user_id: "08e1608c-eb31-4623-bde6-b63646daecf9" }'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user.'
                  example: gbailey@example.net
                  nullable: false
                password:
                  type: string
                  description: 'The password of the user.'
                  example: '|]|{+-'
                  nullable: false
                device_name:
                  type: string
                  description: 'The name of the device.'
                  example: architecto
                  nullable: false
              required:
                - email
                - password
                - device_name
      security: []
