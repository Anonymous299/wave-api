openapi: 3.0.3
info:
  title: 'wave-api API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
tags:
  -
    name: Endpoints
    description: ''
paths:
  /api/health:
    get:
      summary: ''
      operationId: getApiHealth
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: ok
                properties:
                  status:
                    type: string
                    example: ok
      tags:
        - Endpoints
      security: []
  /api/users/nearby:
    get:
      summary: ''
      operationId: getApiUsersNearby
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                  description: ''
                  example: 4326.41688
                  nullable: false
                longitude:
                  type: number
                  description: ''
                  example: 4326.41688
                  nullable: false
                distance:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 17
                  nullable: false
              required:
                - latitude
                - longitude
                - distance
      security: []
  /api/users/me:
    get:
      summary: ''
      operationId: getApiUsersMe
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/users/location:
    post:
      summary: ''
      operationId: postApiUsersLocation
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                  description: ''
                  example: 4326.41688
                  nullable: false
                longitude:
                  type: number
                  description: ''
                  example: 4326.41688
                  nullable: false
              required:
                - latitude
                - longitude
      security: []
  /api/swipes:
    post:
      summary: ''
      operationId: postApiSwipes
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                swipee_id:
                  type: string
                  description: 'Must be a valid UUID. The <code>id</code> of an existing record in the users table.'
                  example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
                  nullable: false
                direction:
                  type: string
                  description: ''
                  example: left
                  nullable: false
                  enum:
                    - left
                    - right
              required:
                - swipee_id
                - direction
      security: []
  /api/auth/register:
    post:
      summary: ''
      operationId: postApiAuthRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: zbailey@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '-0pBNvYgxw'
                  nullable: false
                device_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: a
                  nullable: false
                latitude:
                  type: number
                  description: ''
                  example: 4326.41688
                  nullable: false
                longitude:
                  type: number
                  description: ''
                  example: 4326.41688
                  nullable: false
              required:
                - name
                - email
                - password
                - device_name
                - latitude
                - longitude
      security: []
  /api/auth/login:
    post:
      summary: ''
      operationId: postApiAuthLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gbailey@example.net
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                device_name:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
              required:
                - email
                - password
                - device_name
      security: []
